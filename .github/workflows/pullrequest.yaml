---
name: Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  pull_request:
    env:
      IMAGE_NAME: aws-sandbox-metrics
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=${{ secrets.REGISTRY_URI }}/${{ secrets.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        VERSION=edge
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=temporary-pr-${{ github.event.number }}
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        fi

        echo ::set-output name=version::${VERSION}
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Image Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.REGISTRY_URI }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and publish image to Quay
      uses: docker/build-push-action@v2
      with:
        file: Containerfile.metrics
        push: true
        # Use the PR name
        tags: ${{ steps.prep.outputs.tags }}
        # images from Pull expire after 1d
        labels: |
          quay.expires-after=7d
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Run Makefile linting and tests
      run: make lint test
  
  build-and-push-api:
    concurrency:
      group: temporary-pr-${{ github.event.number }}
      cancel-in-progress: true

    uses: ./.github/workflows/build-push.yml
    secrets:
      registry_username: ${{ secrets.QUAY_RHPDS_SANDBOX_API_USER }}
      registry_password: ${{ secrets.QUAY_RHPDS_SANDBOX_API_PASSWORD }}
    with:
      tag: temporary-pr-${{ github.event.number }}
      image: api
      labels: |-
        quay.expires-after=7d
        org.opencontainers.image.source=${{ github.event.repository.html_url }}
        org.opencontainers.image.revision=${{ github.sha }}

  build-and-push-admin:
    concurrency:
      group: temporary-pr-${{ github.event.number }}-admin
      cancel-in-progress: true

    uses: ./.github/workflows/build-push.yml
    secrets:
      registry_username: ${{ secrets.QUAY_RHPDS_SANDBOX_API_USER }}
      registry_password: ${{ secrets.QUAY_RHPDS_SANDBOX_API_PASSWORD }}
    with:
      tag: temporary-pr-${{ github.event.number }}
      image: admin
      labels: |-
        quay.expires-after=7d
        org.opencontainers.image.source=${{ github.event.repository.html_url }}
        org.opencontainers.image.revision=${{ github.sha }}

  build-and-push-conan:
    concurrency:
      group: temporary-pr-${{ github.event.number }}-conan
      cancel-in-progress: true

    uses: ./.github/workflows/build-push.yml
    secrets:
      registry_username: ${{ secrets.QUAY_RHPDS_SANDBOX_API_USER }}
      registry_password: ${{ secrets.QUAY_RHPDS_SANDBOX_API_PASSWORD }}
    with:
      tag: temporary-pr-${{ github.event.number }}
      image: conan
      labels: |-
        quay.expires-after=7d
        org.opencontainers.image.source=${{ github.event.repository.html_url }}
        org.opencontainers.image.revision=${{ github.sha }}
